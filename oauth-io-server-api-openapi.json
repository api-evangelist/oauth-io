{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "OAuth.io Server API",
        "description": "Become an OAuth2 provider",
        "termsOfService": ""
    },
    "servers": [
        "oauth.io\/"
    ],
    "paths": {
        "\/oauth2\/authorize": {
            "post": {
                "summary": "Authorize a user",
                "description": "This endpoint is called when the user allow or deny permission \nin the decision page\n",
                "operationId": "ThisEndpointIsCalledWhenTheUserAllowOrDenyPermissionInTheDecisionPage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Client ID"
                    },
                    {
                        "name": "decision",
                        "in": "query",
                        "description": "Must be set to '1' if the user allowed the app, or '0' if the user denied the authorization"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "List of permission (space delimiter)"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "description": "Redirect URI"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": "Response type"
                    }
                ]
            }
        },
        "\/oauth2\/token": {
            "post": {
                "summary": "Access token retrieval (with code) or refresh (with refresh token)",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "formData",
                        "description": "Client ID"
                    },
                    {
                        "name": "client_secret",
                        "in": "formData",
                        "description": "Client Secret"
                    },
                    {
                        "name": "grant_type",
                        "in": "formData",
                        "description": "authorization_code or client_credential or refresh_token"
                    },
                    {
                        "name": "scope",
                        "in": "formData",
                        "description": "Space separated scope list (e.g. \"email friends_list\"). Used only if grant_type = client_credential"
                    },
                    {
                        "name": "code",
                        "in": "formData",
                        "description": "Code received from \/authorize step. Required if grant_type = authorization_code"
                    },
                    {
                        "name": "refresh_token",
                        "in": "formData",
                        "description": "Refresh token (long-live token) used to refresh the access token (short-live token). Required if grant_type = refresh_token"
                    }
                ]
            }
        },
        "\/oauth2\/check": {
            "get": {
                "summary": "Check the validity of an access token and give back his permission, \nclient_id and user_id\n",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "The access token you want to check"
                    }
                ]
            }
        },
        "\/oauth2\/clients": {
            "post": {
                "summary": "Create a client",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the client's app"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Description of the client's app"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "formData",
                        "description": "Whitelisted redirect uri"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User id of the client's app"
                    }
                ]
            },
            "put": {
                "summary": "Update a client",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "Client id of the app to update"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the client's app"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Description of the client's app"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "formData",
                        "description": "Whitelisted redirect uri"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User id of the client's app"
                    }
                ]
            }
        },
        "\/oauth2\/clients\/:client_id": {
            "get": {
                "summary": "Retrieves a client by its client_id",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": []
            },
            "delete": {
                "summary": "Remove a client by its client_id",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/oauth2\/clients\/keygen\/:client_id": {
            "get": {
                "summary": "Regenerate the API key's client",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/oauth2\/clients\/all\/:user_id": {
            "get": {
                "summary": "Retrieves all clients, and filters by user_id if given",
                "description": "",
                "operationId": "",
                "deprecated": 0,
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "",
                        "type": "string"
                    },
                    "client_secret": {
                        "description": "",
                        "type": "string"
                    },
                    "provider_id": {
                        "description": "",
                        "type": "string"
                    },
                    "redirect_uri": {
                        "description": "",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "CodeSet": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "TokenSet": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "description": "",
                        "type": "string"
                    },
                    "token_type": {
                        "description": "",
                        "type": "string"
                    },
                    "access_token": {
                        "description": "",
                        "type": "string"
                    },
                    "expires_in": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "error": {
                        "description": "",
                        "type": "string"
                    },
                    "error_description": {
                        "description": "",
                        "type": "string"
                    }
                }
            }
        }
    }
}